library('ggplot2')
library('bookdown')
library('lmerTest')
library('kableExtra')
library('lme4')
library('knitr')
library('dplyr')
library('tidyverse')
library('lubridate')
library('zoo')
library('stringr')
library('viridis')
library('broom')
library('broom.mixed')
library('tibble')
opts_chunk$set(echo = TRUE,warning=FALSE,error=FALSE,message=FALSE)
#opts_knit$set(root.dir='./Library/CloudStorage/Box-Box/box-group-lena-studies/noise_pilotData/everyday_CI/')
opts_knit$set(root.dir='/Users/megcychosz/Library/CloudStorage/Box-Box/box-group-lena-studies/its_dataframes/')
center_scale <- function(x) {
scale(x, scale = FALSE)
}
matches <- read.csv('dataframes/CI_TH_matches.csv') %>%
select(-gender)
matches <- read.csv('dataframes/CI_TH_matches.csv') %>%
select(-gender)
#opts_knit$set(root.dir='./Library/CloudStorage/Box-Box/box-group-lena-studies/noise_pilotData/everyday_CI/')
opts_knit$set(root.dir='/Users/megcychosz/Library/CloudStorage/Box-Box/box-group-lena-studies/its_dataframes/')
R <- pre_its_df %>%
filter(corpus=='R' | corpus == 'J') %>% # timezone reported in GMT so we convert to EST and CST here
mutate(startTimestamp = with_tz(ymd_hms(startClockTime, tz = "GMT"),"America/New_York"),
endTimeStamp = with_tz(ymd_hms(endClockTime, tz = "GMT"),"America/New_York"))
# get LENA measures
pre_its_df <- plyr::ldply( .data = list.files(pattern="*its_info.csv", # info about recording and child
recursive=TRUE),
.fun = read.csv,colClasses=c("child_id"="character")) %>%
select(-X, -DOB) %>%
filter(child_id %in% matches$child_id) %>%
mutate(endTimeSecs=case_when(child_id=='177RTP1' ~ "46214.05S",   # three participants paused their recordings briefly
TRUE ~ "57599.99S")) %>%              # only one participant truly had a <16hr recording
mutate(corpus = substring(child_id, 4, 4)) # create a variable for corpus  Jessica)
matches <- read.csv('../noise_pilotData/everyday_CI/dataframes/CI_TH_matches.csv') %>%
select(-gender)
match_info <- matches %>% select(match, child_id)
# get LENA measures
pre_its_df <- plyr::ldply( .data = list.files(pattern="*its_info.csv", # info about recording and child
recursive=TRUE),
.fun = read.csv,colClasses=c("child_id"="character")) %>%
select(-X, -DOB) %>%
filter(child_id %in% matches$child_id) %>%
mutate(endTimeSecs=case_when(child_id=='177RTP1' ~ "46214.05S",   # three participants paused their recordings briefly
TRUE ~ "57599.99S")) %>%              # only one participant truly had a <16hr recording
mutate(corpus = substring(child_id, 4, 4)) # create a variable for corpus  Jessica)
R <- pre_its_df %>%
filter(corpus=='R' | corpus == 'J') %>% # timezone reported in GMT so we convert to EST and CST here
mutate(startTimestamp = with_tz(ymd_hms(startClockTime, tz = "GMT"),"America/New_York"),
endTimeStamp = with_tz(ymd_hms(endClockTime, tz = "GMT"),"America/New_York"))
its_df <- pre_its_df %>%
filter(corpus!='R' & corpus !='J') %>%
mutate(startTimestamp = with_tz(ymd_hms(startClockTime, tz = "GMT"),"America/Chicago"),
endTimeStamp = with_tz(ymd_hms(endClockTime, tz = "GMT"),"America/Chicago")) %>%
rbind(., R) %>%
mutate(date = date(startTimestamp),
startClockHours = hour(startTimestamp),
startClockMinutes = minute(startTimestamp),
startClockSeconds = second(startTimestamp),
endClockHours = hour(endTimeStamp),
endClockMinutes = minute(endTimeStamp),
endClockSeconds = second(endTimeStamp)) %>%
mutate(total_hrs=as.numeric(case_when(child_id=='177RTP1' ~ "12.83", # one participant < 16hr recording
TRUE ~ "16"))) %>%
mutate(startClockTotalSeconds = ((startClockHours*60)*60)+(60*startClockMinutes)+startClockSeconds) # convert everything to seconds
speech_df <- plyr::ldply( .data = list.files(pattern="*AN_timestamps.csv",
recursive=TRUE, ignore.case = TRUE),
.fun = read.csv) %>%
select(-X) %>%
filter(child_id %in% matches$child_id) %>%
filter(duration<10) %>% # clips >10s are much more likely to be mislabeled
mutate(corpus = substring(child_id, 4, 4)) %>%
mutate(hours = hour(seconds_to_period(seconds)),
minutes = minute(seconds_to_period(seconds))) %>%
merge(., its_df, by=c('corpus', 'child_id')) %>%
mutate(avg_dB=avg_dB+97,
peak_dB=peak_dB+97)
speech_df <- plyr::ldply( .data = list.files(pattern="*AN_timestamps.csv",
recursive=TRUE, ignore.case = TRUE),
.fun = read.csv) %>%
select(-X) %>%
filter(child_id %in% matches$child_id) %>%
filter(duration<10) %>% # clips >10s are much more likely to be mislabeled
mutate(corpus = substring(child_id, 4, 4)) %>%
mutate(hours = hour(seconds_to_period(seconds)),
minutes = minute(seconds_to_period(seconds))) %>%
merge(., its_df, by=c('corpus', 'child_id')) %>%
mutate(avg_dB=avg_dB+97,
peak_dB=peak_dB+97)
speech_df <- plyr::ldply( .data = list.files(pattern="*AN_timestamps.csv",
recursive=TRUE, ignore.case = TRUE),
.fun = read.csv) #%>%
# summary statistics for each child
recording_speech <- speech %>%
group_by(match, child_id) %>%
summarize(normed_words = sum(wordCount)/total_hrs, # avg. number of words/hr
normed_speech = sum(duration)/total_hrs) %>%  # avg. # of seconds of speech/hr
mutate(normed_mins_speech = normed_speech/60) %>%
distinct(child_id, .keep_all = T)
speech <- pre_speech %>%
filter(nonSpeechDur=="P0.00S") # remove any clips that contain non-speech
pre_speech <- read.csv('dataframes/icphs_speech.csv') %>%
merge(., matches, by ='child_id') %>%
select(-X.x, -X.y)
opts_knit$set(root.dir='./Library/CloudStorage/Box-Box/box-group-lena-studies/noise_pilotData/everyday_CI/')
speech <- pre_speech %>%
filter(nonSpeechDur=="P0.00S") # remove any clips that contain non-speech
pre_speech <- read.csv('dataframes/icphs_speech.csv') %>%
merge(., matches, by ='child_id') %>%
select(-X.x, -X.y)
speech <- pre_speech %>%
filter(nonSpeechDur=="P0.00S") # remove any clips that contain non-speech
# summary statistics for each child
recording_speech <- speech %>%
group_by(match, child_id) %>%
summarize(normed_words = sum(wordCount)/total_hrs, # avg. number of words/hr
normed_speech = sum(duration)/total_hrs) %>%  # avg. # of seconds of speech/hr
mutate(normed_mins_speech = normed_speech/60) %>%
distinct(child_id, .keep_all = T)
pre_speech <- read.csv('dataframes/icphs_speech.csv') #%>%
# summary statistics for each child
recording_speech <- speech %>%
group_by(match, child_id) %>%
summarize(normed_words = sum(wordCount)/total_hrs, # avg. number of words/hr
normed_speech = sum(duration)/total_hrs) %>%  # avg. # of seconds of speech/hr
mutate(normed_mins_speech = normed_speech/60) %>%
distinct(child_id, .keep_all = T)
speech <- pre_speech %>%
filter(nonSpeechDur=="P0.00S") # remove any clips that contain non-speech
# summary statistics for each child
recording_speech <- speech %>%
group_by(match, child_id) %>%
summarize(normed_words = sum(wordCount)/total_hrs, # avg. number of words/hr
normed_speech = sum(duration)/total_hrs) %>%  # avg. # of seconds of speech/hr
mutate(normed_mins_speech = normed_speech/60) %>%
distinct(child_id, .keep_all = T)
prep_speech_quantity_tbl <- recording_speech %>%
group_by(match) %>%
summarize(mean_normed_words = mean(normed_words), # avg. number of words/hr
sd_normed_words = sd(normed_words),
min_normed_words = min(normed_words),
max_normed_words = max(normed_words),
mean_normed_speech = mean(normed_speech),  # avg. # of seconds of speech/hr
sd_normed_speech = sd(normed_speech),
min_normed_speech = min(normed_speech),
max_normed_speech = max(normed_speech)) %>%
mutate_if(is.numeric, round, 2)
intensity_stat <- speech %>%
group_by(match) %>%
summarize(mean_dB = mean(avg_dB), # group-level average
sd_dB = sd(avg_dB), # group-level variance
min_dB = min(avg_dB),
max_dB = max(avg_dB)) %>%
mutate_if(is.numeric, round, 2)
word_stat <- prep_speech_quantity_tbl %>%
mutate(word_quantity = paste0(mean_normed_words,"(",
sd_normed_words,")",",",
min_normed_words,"-",
max_normed_words)) %>%
select(match, word_quantity) %>%
spread(match, word_quantity)
speech_stat <- prep_speech_quantity_tbl %>%
mutate(input_quantity = paste0(mean_normed_speech,"(",
sd_normed_speech,")",",",
min_normed_speech,"-",
max_normed_speech)) %>%
select(match, input_quantity) %>%
spread(match, input_quantity)
speech_quantity_tbl <- intensity_stat %>%
mutate(input_intensity = paste0(mean_dB,"(",sd_dB,")",",",min_dB,"-",max_dB)) %>%
select(match, input_intensity) %>%
spread(match, input_intensity) %>%
rbind(., word_stat) %>%
rbind(., speech_stat) %>%
rownames_to_column(.,var = 'measure') %>%
mutate(measure = case_when(measure=='1'~'intensity',
measure=='2'~'num_words_hr',
TRUE~'secs_speech_hr'))
# the num of words and amount of speech from adults for each child, for each hour of the day
# hourly speech refers to the avg. num of seconds of speech input each hour
hourly_speech <- speech %>%
group_by(match, implanted, child_id, age_mos, hours) %>%
summarize(normed_hourly_words = sum(wordCount),
normed_hourly_speech = sum(duration)) %>%
filter(normed_hourly_speech>3) %>% # remove all hours with less than 3 seconds of speech
mutate(normed_hourly_mins = normed_hourly_speech/60)
# now choose the highest vocal activity hour
# for each child
high_word_hour <- hourly_speech %>%
group_by(child_id) %>%
arrange(desc(normed_hourly_words)) %>%
slice(n=1) %>%
select(-normed_hourly_speech, -hours)
high_hour <- hourly_speech %>%
group_by(child_id) %>%
arrange(desc(normed_hourly_speech)) %>%
slice(n=1) %>%
select(-normed_hourly_words, -hours) %>%
merge(., high_word_hour, by=c('child_id', 'match'))
# summary statistics for each match
all_speech_quantity_tbl <- speech %>%
group_by(match, child_id) %>%
summarize(normed_words = sum(wordCount)/total_hrs,
normed_speech = sum(duration)/total_hrs) %>%
ungroup() %>%
merge(., high_hour, by=c('child_id', 'match')) %>% # with info about the measures from the highest vocal hour
group_by(match) %>%
summarize(avg_highhour_words = mean(normed_hourly_words),
sd_highhour_words = sd(normed_hourly_words),
avg_highhour_speech = mean(normed_hourly_speech),
sd_highhour_speech = mean(normed_hourly_speech),
avg_normed_words = mean(normed_words),
sd_normed_words = sd(normed_words),
avg_normed_speech = mean(normed_speech),
sd_normed_speech = sd(normed_speech))
kable(all_speech_quantity_tbl, booktabs=T,
caption= "Speech input statistics, by hearing group",
row.names = FALSE) %>%
kable_styling() %>%
kableExtra::kable_styling(latex_options = "hold_position")
# compute the percentage of minutes in the child's day with > 1 AW
time_steps <- rep(seq(60,57600,60),times=52) %>% as.data.frame()
time_steps$seconds <- time_steps$.
ids <- speech %>% distinct(child_id)
ids_repeat <- rep(ids$child_id,960) %>% as.data.frame()
ids_repeat$child_id <- ids_repeat$.
time_steps_demo <- ids_repeat %>%
arrange(child_id) %>%
select(-.) %>%
cbind(., time_steps) %>%
select(child_id, seconds)
match_info <- matches %>% select(match, child_id)
pre_input_consis <- speech %>%
select(child_id, seconds, duration, wordCount, clip_onset) %>%
merge(., time_steps_demo, by=c('seconds', 'child_id'),all=TRUE) %>% # impute the missing seconds
replace_na(list(duration = 0, wordCount=0)) %>% # replace the imputed time stamps with 0 adult words and 0 duration
merge(., match_info, by='child_id') # remerge to get complete df of addtl measures w/o na's
input_consis <- pre_input_consis %>%
group_by(match, child_id, seconds) %>%
summarize(adult_words = sum(wordCount)) %>%
ungroup() %>%
mutate(contains_words = if_else((adult_words > 0), 'TRUE', 'FALSE')) %>% # boolean if it contains words
ungroup() %>%
group_by(child_id, contains_words) %>%
tally() %>%
mutate(perc_words = if_else(child_id=='177RTP1', n/770, n/960)) %>% #769.8 minutes in 12.83 hr recording; others have 960
filter(contains_words=='TRUE') %>%
merge(., match_info, by='child_id')
speech_consis_tbl <- input_consis %>%
group_by(match) %>%
summarize(mean_perc_words = mean(perc_words),
sd_perc_words = sd(perc_words),
min_perc_words = min(perc_words),
max_perc_words = max(perc_words)) %>%
mutate_if(is.numeric, round, 2) %>%
mutate(input_consistency = paste0(mean_perc_words,"(",sd_perc_words,")",",",min_perc_words,"-",max_perc_words)) %>%
select(match, input_consistency) %>%
spread(match, input_consistency) %>%
rownames_to_column(.,var = 'measure')
# create a 4th "match" of CI kids to compute hearing age
ha <- matches %>% select(child_id, hearing_age)
ha_speech <- its_df %>%
select(child_id, age_mos) %>%
merge(., recording_speech, by=c('child_id')) %>%
merge(., ha, by='child_id') %>%
filter(match=='CI') %>%
select(-age_mos, -match) %>%
mutate(age_mos = hearing_age,
match = 'CI_by_hearing_age') %>%
filter(!hearing_age<=12) %>%
select(-hearing_age)
input_growth_tbl <- its_df %>%
select(child_id, age_mos) %>%
merge(., recording_speech, by='child_id') %>%
rbind(., ha_speech) %>%
mutate(age_mos_centered = center_scale(age_mos)) %>%
group_by(match) %>%
do(word_growth = lm(normed_words~age_mos_centered, data=.),
mod2 = cor(.$normed_words, .$age_mos_centered, method = "pearson")) %>%
mutate(slope = summary(word_growth)$coeff[2],
p_value = summary(word_growth)$coeff[8],
Pearson = mod2[1]) %>%
select(match, slope, p_value, Pearson) %>%
mutate_if(is.numeric, round, 2) %>%
mutate(stats=paste0('B=',slope,",","p=",p_value, ",","r=", Pearson)) %>%
select(-slope, -p_value, -Pearson) %>%
spread(match, stats) %>%
mutate(measure='Adult word growth')
# dataframe containing LENA data for the kids that are matched
its_df <- read.csv('dataframes/icphs_voc_its.csv') #%>%
View(its_df)
# dataframe containing LENA data for the kids that are matched
its_df <- read.csv('dataframes/icphs_voc_its.csv') %>%
merge(., matches, by=c('child_id')) %>% # merge with demo info
select(-X.x, -X.y)
# compute the percentage of minutes in the child's day with > 1 AW
time_steps <- rep(seq(60,57600,60),times=52) %>% as.data.frame()
time_steps$seconds <- time_steps$.
ids <- speech %>% distinct(child_id)
ids_repeat <- rep(ids$child_id,960) %>% as.data.frame()
ids_repeat$child_id <- ids_repeat$.
time_steps_demo <- ids_repeat %>%
arrange(child_id) %>%
select(-.) %>%
cbind(., time_steps) %>%
select(child_id, seconds)
match_info <- matches %>% select(match, child_id)
pre_input_consis <- speech %>%
select(child_id, seconds, duration, wordCount, clip_onset) %>%
merge(., time_steps_demo, by=c('seconds', 'child_id'),all=TRUE) %>% # impute the missing seconds
replace_na(list(duration = 0, wordCount=0)) %>% # replace the imputed time stamps with 0 adult words and 0 duration
merge(., match_info, by='child_id') # remerge to get complete df of addtl measures w/o na's
input_consis <- pre_input_consis %>%
group_by(match, child_id, seconds) %>%
summarize(adult_words = sum(wordCount)) %>%
ungroup() %>%
mutate(contains_words = if_else((adult_words > 0), 'TRUE', 'FALSE')) %>% # boolean if it contains words
ungroup() %>%
group_by(child_id, contains_words) %>%
tally() %>%
mutate(perc_words = if_else(child_id=='177RTP1', n/770, n/960)) %>% #769.8 minutes in 12.83 hr recording; others have 960
filter(contains_words=='TRUE') %>%
merge(., match_info, by='child_id')
speech_consis_tbl <- input_consis %>%
group_by(match) %>%
summarize(mean_perc_words = mean(perc_words),
sd_perc_words = sd(perc_words),
min_perc_words = min(perc_words),
max_perc_words = max(perc_words)) %>%
mutate_if(is.numeric, round, 2) %>%
mutate(input_consistency = paste0(mean_perc_words,"(",sd_perc_words,")",",",min_perc_words,"-",max_perc_words)) %>%
select(match, input_consistency) %>%
spread(match, input_consistency) %>%
rownames_to_column(.,var = 'measure')
# create a 4th "match" of CI kids to compute hearing age
ha <- matches %>% select(child_id, hearing_age)
ha_speech <- its_df %>%
select(child_id, age_mos) %>%
merge(., recording_speech, by=c('child_id')) %>%
merge(., ha, by='child_id') %>%
filter(match=='CI') %>%
select(-age_mos, -match) %>%
mutate(age_mos = hearing_age,
match = 'CI_by_hearing_age') %>%
filter(!hearing_age<=12) %>%
select(-hearing_age)
input_growth_tbl <- its_df %>%
select(child_id, age_mos) %>%
merge(., recording_speech, by='child_id') %>%
rbind(., ha_speech) %>%
mutate(age_mos_centered = center_scale(age_mos)) %>%
group_by(match) %>%
do(word_growth = lm(normed_words~age_mos_centered, data=.),
mod2 = cor(.$normed_words, .$age_mos_centered, method = "pearson")) %>%
mutate(slope = summary(word_growth)$coeff[2],
p_value = summary(word_growth)$coeff[8],
Pearson = mod2[1]) %>%
select(match, slope, p_value, Pearson) %>%
mutate_if(is.numeric, round, 2) %>%
mutate(stats=paste0('B=',slope,",","p=",p_value, ",","r=", Pearson)) %>%
select(-slope, -p_value, -Pearson) %>%
spread(match, stats) %>%
mutate(measure='Adult word growth')
speech_input_growth_tbl <- its_df %>%
select(child_id, age_mos) %>%
merge(., recording_speech, by='child_id') %>%
rbind(., ha_speech) %>%
mutate(age_mos_centered = center_scale(age_mos)) %>%
group_by(match) %>%
do(speech_growth = lm(normed_speech~age_mos_centered, data=.),
mod2 = cor(.$normed_speech, .$age_mos_centered, method = "pearson")) %>%
mutate(slope = summary(speech_growth)$coeff[2],
p_value = summary(speech_growth)$coeff[8],
Pearson = mod2[1]) %>%
select(match, slope, p_value, Pearson) %>%
mutate_if(is.numeric, round, 3) %>%
mutate(stats=paste0('B=',slope,",","p=",p_value, ",","r=", Pearson)) %>%
select(-slope, -p_value, -Pearson) %>%
spread(match, stats) %>%
mutate(measure='Adult speech (minutes) growth')
speech %>%
mutate(match=recode(match,
chrono='Chrono. \n age matches',
CI='Cochlear implant',
HA='Hearing \n age matches')) %>%
ggplot(., aes(x=avg_dB, group=child_id, color=match,fill=match)) +
geom_density(adjust=1.5,alpha=.05,lwd = .3) +
scale_color_manual(values=c("#1B9E77","#7570B3","#E7298A")) +
scale_fill_manual(values=c("#1B9E77","#7570B3","#E7298A")) +
facet_grid(~match) +
xlab('Caregiver speech intensity (dB)') +
theme(axis.title = element_text(face ="bold", size=12),
legend.position = "none",
axis.text = element_text(face="bold", color='gray50', size=9),
strip.text=element_text(face='bold', size=10))
View(speech)
# duration of segments
adult_dur <- pre_speech %>%
group_by(segment_type) %>%
summarize(total_dur = sum(duration)) %>%
summarize(total_dur_hour = (total_dur/60)/60)
adult_dur
voc_dur <- vocs %>%
summarize(total_dur = sum(duration)) %>%
summarize(total_dur_hour = (total_dur/60)/60)
vocs <- read.csv('dataframes/icphs_voc_voc.csv') %>%
merge(., matches, by=c('child_id')) %>%
select(-X.x, -X.y)
View(vocs)
convo <- read.csv('dataframes/icphs_ctc.csv') %>%
merge(., matches, by ='child_id') %>%
select(-X.x, -X.y)
View(convo)
pre_speech <- read.csv('dataframes/icphs_speech.csv') %>%
select(-X.x, -X.y)
pre_speech <- read.csv('dataframes/icphs_speech.csv') %>%
select(-X)
vocs <- read.csv('dataframes/icphs_voc_voc.csv')
vocs <- read.csv('dataframes/icphs_voc_voc.csv') %>%
select(-X)
voc_df <- plyr::ldply( .data = list.files(pattern="*CHN_timestamps.csv",
recursive=TRUE, ignore.case = TRUE),
.fun = read.csv,
colClasses=c("its_file_name"="character")) %>%
select(-X) %>%
mutate(corpus = substring(its_file_name, 4, 4)) %>%
rename(child_id = its_file_name) %>%
filter(child_id %in% matches$child_id) %>%
mutate(hours = hour(seconds_to_period(seconds)),
minutes = minute(seconds_to_period(seconds))) %>%
merge(., its_df, by=c('corpus', 'child_id')) %>%
mutate(secondsClock = startClockTotalSeconds+seconds,
minutesClock = minute(seconds_to_period(secondsClock)),
hoursClock = hour(seconds_to_period(secondsClock))) %>%
mutate(avg_dB=avg_dB+97,
peak_dB=peak_dB+97) %>% # scale intensity into something interpretable
mutate(childUttLen=as.numeric(str_sub(childUttLen,2,-2)),
childCryVfxLen=as.numeric(str_sub(childCryVfxLen,2,-2)))
#opts_knit$set(root.dir='./Library/CloudStorage/Box-Box/box-group-lena-studies/noise_pilotData/everyday_CI/')
opts_knit$set(root.dir='/Users/megcychosz/Library/CloudStorage/Box-Box/box-group-lena-studies/its_dataframes/')
voc_df <- plyr::ldply( .data = list.files(pattern="*CHN_timestamps.csv",
recursive=TRUE, ignore.case = TRUE),
.fun = read.csv,
colClasses=c("its_file_name"="character")) %>%
select(-X) %>%
mutate(corpus = substring(its_file_name, 4, 4)) %>%
rename(child_id = its_file_name) %>%
filter(child_id %in% matches$child_id) %>%
mutate(hours = hour(seconds_to_period(seconds)),
minutes = minute(seconds_to_period(seconds))) %>%
merge(., its_df, by=c('corpus', 'child_id')) %>%
mutate(secondsClock = startClockTotalSeconds+seconds,
minutesClock = minute(seconds_to_period(secondsClock)),
hoursClock = hour(seconds_to_period(secondsClock))) %>%
mutate(avg_dB=avg_dB+97,
peak_dB=peak_dB+97) %>% # scale intensity into something interpretable
mutate(childUttLen=as.numeric(str_sub(childUttLen,2,-2)),
childCryVfxLen=as.numeric(str_sub(childCryVfxLen,2,-2)))
write.csv(voc_df, 'dataframes/icphs_voc_voc.csv')
vocs <- read.csv('dataframes/icphs_voc_voc.csv') %>%
select(-X)
speech_df <- plyr::ldply( .data = list.files(pattern="*AN_timestamps.csv",
recursive=TRUE, ignore.case = TRUE),
.fun = read.csv) #%>%
speech_df <- plyr::ldply( .data = list.files(pattern="*AN_timestamps.csv",
recursive=TRUE, ignore.case = TRUE),
.fun = read.csv) %>%
select(-X) %>%
filter(child_id %in% matches$child_id) %>%
filter(duration<10) %>% # clips >10s are much more likely to be mislabeled
mutate(corpus = substring(child_id, 4, 4)) %>%
mutate(hours = hour(seconds_to_period(seconds)),
minutes = minute(seconds_to_period(seconds))) %>%
merge(., its_df, by=c('corpus', 'child_id')) %>%
mutate(avg_dB=avg_dB+97,
peak_dB=peak_dB+97)
write.csv(speech_df, 'dataframes/icphs_speech.csv')
pre_speech <- read.csv('dataframes/icphs_speech.csv') %>%
select(-X)
opts_knit$set(root.dir='./Library/CloudStorage/Box-Box/box-group-lena-studies/noise_pilotData/everyday_CI/')
pre_speech <- read.csv('dataframes/icphs_speech.csv') %>%
select(-X)
pre_vocs <- vocs
View(pre_vocs)
pre_vocs <- read.csv('dataframes/icphs_voc_voc.csv') %>%
select(-X)
)
pre_vocs <- read.csv('dataframes/icphs_voc_voc.csv') %>%
select(-X)
